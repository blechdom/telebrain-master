{
  "name": "jlivetime",
  "version": "0.0.11",
  "author": {
    "name": "Benjamin Eidelman",
    "email": "beneidel@gmail.com"
  },
  "description": "jQuery plugin for live timestamps, countdowns, time-ago, and timers",
  "contributors": [
    {
      "name": "Benjamin Eidelman",
      "email": "beneidel@gmail.com"
    }
  ],
  "bin": {},
  "scripts": {
    "minify": "uglifyjs ./src/jlivetime.js > ./jlivetime.min.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/benjamine/jLiveTime.git"
  },
  "keywords": [
    "jLiveTime",
    "jQuery",
    "live",
    "time",
    "timer",
    "countdown",
    "datetime",
    "timestamp"
  ],
  "devDependencies": {
    "uglify-js": "1.3.x"
  },
  "bundleDependencies": [],
  "license": "MIT",
  "engine": {
    "node": ">=0.4"
  },
  "dependencies": {},
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/benjamine/jLiveTime",
  "readme": "jLiveTime\r\n============\r\n\r\n*jQuery plugin for live timestamps, countdowns, time-ago, and timers*\r\n\r\nFeatures\r\n----------------\r\n\r\n- Support for dates, timestamps, countdowns, time-ago, or timers using the same mechanism\r\n- Updates automatically, no performance-costly polling, content is updated only when needed\r\n- Supports standard html5 format ```<time datetime=\"\">```. A different attribute name can be used\r\n- Specify multiple formats per-range to switch automatically between date, time, countdown, time-ago or any custom format using the same html\r\n- Allows you to cache your html aggresively (it's completely independent of page generation time)\r\n- Show time in local timezone\r\n- Use different formatting for element html and tooltip\r\n- Milliseconds accuracy\r\n- To handles client clocks out of sync jLiveTime can perform an ajax request and use Date http response header. Server-to-Local offset is cached on sessionStorage (fallback to session cookie)\r\n- jQuery event 'refreshComplete' allows you to add visual effects (check [DEMO](http://benjamine.github.com/jLiveTime/demo/demo.html))\r\n\r\n-----\r\n**[DEMO](http://benjamine.github.com/jLiveTime/demo/demo.html)**\r\n-----\r\n-----\r\n\r\nRequirements\r\n-----------------\r\n\r\n- jQuery 1.8+\r\n\r\nSupported Platforms\r\n-----------------\r\n\r\nTested on IE8-9, Chrome, Firefox, Safari and Mobile Safari.\r\n\r\nUnit testing is not implemented yet. You can try it on your browser visiting [DEMO](http://benjamine.github.com/jLiveTime/demo/demo.html)\r\n\r\nInstallation\r\n-----------------\r\n\r\n```\r\nnpm install jlivetime\r\n```\r\n\r\nAdd a reference in your html to jlivetime.js (dev) or jlivetime.min.js (minified)\r\n\r\nUsage\r\n---------------\r\n\r\nHTML\r\n\r\n``` html\r\n\r\n\t<!-- standard html5 format -->\r\n\t<time datetime=\"2012-11-15T18:23:00.000Z\" data-time-label data-time-tooltip>November 15, at 18:23 (GMT)</time>\r\n\r\n\t<!-- using div and timestamp in milliseconds -->\r\n    <div datetime=\"1353003780000\" data-time-label>November 15, at 18:23 (GMT)</time>\r\n\r\n\t<!-- using nested labels -->\r\n    <time datetime=\"2012-11-15T18:23:00.000Z\">\r\n    \t<span data-time-label=\"td_h\"> hours <span data-time-label=\"d_m\"> minutes\r\n    </time>\r\n\r\n```\r\n\r\nJavaScript\r\n\r\n``` javascript\r\n\r\n    // activate jLiveTime in a container, will format and automatically update all datetimes inside\r\n    $(document.body).livetime();\r\n\r\n    // deactivate jLiveTime in a container (stop refreshing)\r\n    $(document.body).livetime(false);\r\n\r\n    // if new content is added (eg. ajax reload), to refresh immediately you can call .livetime() at any time\r\n\t$(document.body).livetime();\r\n\r\n```\r\n\r\nFormatting\r\n----------------\r\n\r\n### Timestamps\r\n\r\n- Year: yyyy => 2012\r\n- Month: M, MM, MMM, MMMM => 2, 02, Feb, February\r\n- Day of Month: d, dd => 8, 08\r\n- Weekday: e, ee, eee, eeee => 3, We, Wed, Wednesday\r\n- Hours: h, hh, H, HH => 1, 01, 13, 13\r\n- Minutes: m, mm => 9, 09\r\n- Seconds: s, ss => 5, 05\r\n- Milliseconds: f, ff, fff => 2, 02, 002\r\n- am/pm: t, tt => p, pm\r\n\r\n### Time Difference\r\n\r\nTo display time difference to current time (time elapsed, or time remaining) use ```d_``` prefix.\r\n\r\n(Timestamp components and Time difference can be combined in one expression)\r\n\r\n- d_s => seconds in difference (remaining or upcoming) from/to timestamp\r\n- td_s => total seconds from/to timestamp\r\n- d_fff => milliseconds in difference using 3 digits (add leading zeros)\r\n- td_w => total months from/to timestamp\r\n\r\nYears: y, Months: M, Weeks: w, Days: d, Hours: h, Minutes: m, Seconds: s, Milliseconds: f\r\n\r\nThis can be used to display countdowns, timers or time-ago labels.\r\n\r\nNote: to escape words in a format expresion wrap it with brackes, eg. This [mm] is escaped, this mm is not => This mm is escaped, this 04 not\r\n\r\n### Named formats\r\n\r\nTo avoid duplicating a format expression in all time elements you can create named formats.\r\n\r\n``` javascript\r\n\r\n\t$.livetime.options.formats.shortDate = 'MMM d';\r\n\t$.livetime.options.formats.fullDate = 'eeee MMMM d yyyy';\r\n\r\n```\r\n\r\nThen you can use it like this:\r\n\r\n``` html\r\n\r\n\t<time datetime=\"2012-11-15T18:23Z\" data-time-label=\"#shortDate\" data-time-tooltip=\"#fullDate\"/>\r\n\r\n```\r\n\r\nWhen no format is specified _default and _default_tooltip formats are used.\r\n\r\n### Per-range Named formats\r\n\r\nNamed formats can be specified using ranges, to switch format expression based on seconds from/to timestamp\r\n\r\n``` javascript\r\n\r\n    $.livetime.options.formats.humanized = [\r\n        [-360*24*3600, '#fulldate'],\r\n        [-6*24*3600, 'MMMM d at h:mm tt'],\r\n        [- 48*3600, 'eeee at h:mm tt'],\r\n        [-24*3600, 'Tomorrow at h:mm tt'],\r\n        [-7200, 'in td_h hours'],\r\n        [-3600, 'in about an hour'],\r\n        [-120, 'in td_m minutes'],\r\n        [-60, 'in about a minute'],\r\n        [0, 'in a few seconds'],\r\n        [60, 'a few seconds ago'],\r\n        [120, 'about a minute ago'],\r\n        [3600, 'td_m minutes ago'],\r\n        [7200, 'about an hour ago'],\r\n        [24*3600, 'td_h hours ago'],\r\n        [48*3600, 'Yesterday at h:mm tt'],\r\n        [6*24*3600, 'eeee at h:mm tt'],\r\n        [360*24*3600, 'MMMM d at h:mm tt'],\r\n        ['#fulldate']\r\n    ];\r\n\r\n```\r\n\r\nEvents with Duration\r\n----------------\r\n\r\nYou can add a duration to indicate an event has a duration, allowing you to use the end time (datetime + duration) in your format expression, example:\r\n\r\n``` html\r\n\r\n    <time datetime=\"2012-11-15T18:23:00.000Z\" data-duration=\"600000\" data-time-label=\"started td_s seconds ago, end_td_s seconds remaining\" data-time-tooltip></time>\r\n\r\n```\r\n\r\n- data-duration attribute contains duration in milliseconds\r\n- to use end time, add ```end_``` prefix to any format expression (end_ss, end_d_s, end_dt_s, etc.)\r\n\r\nFormat ranges can use the end time as reference to:\r\n\r\n``` javascript\r\n\r\n    $.livetime.options.formats.customwithduration = [\r\n        [-20, '#fulldate'],\r\n        [-5, 'will start in a few seconds'],\r\n        [0, 'will start in less than 5 seconds'],\r\n        ['end-5', 'playing (end_td_s seconds remaining)'],\r\n        ['end', 'playing (about to finish)'],\r\n        ['end+60', 'finished'],\r\n        ['finished (end_td_m minutes ago)']\r\n    ];\r\n\r\n```\r\n\r\nSync with Server Time\r\n----------------\r\n\r\nCurrent time is calculated using client machine clock, if it's out of sync \r\nTo prevent that you can use an ajax request to a non-cached url (eg. returning a 0 byte document) to sync with server time.\r\nThe offset will be cached using sessionStorage (fallback to a sesion cookie).\r\n\r\n``` javascript\r\n\r\n    $.livetime.options.serverTimeUrl = '/empty.txt';\r\n\r\n```\r\n\r\nServer time will be obtained from the http response Date header.\r\n\r\nMinification\r\n----------------\r\n\r\nA minified version is provided as jlivetime.min.js\r\nTo regenerate that file run (npm i is required as uglifyjs is used):\r\n\r\n```\r\n\tnpm i\r\n\tnpm run-script minify\r\n```\r\n",
  "readmeFilename": "README.md",
  "_id": "jlivetime@0.0.11",
  "dist": {
    "shasum": "cccd4c03157b2706a67a01c2f1797dba200a814d"
  },
  "_from": "jlivetime@*"
}
